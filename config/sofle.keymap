/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

////////////////// Mouse pointing ////////////////////// 
#include "mouse.dtsi"
#define ZMK_POINTING_DEFAULT_MOVE_VAL 600  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 10    // default: 10

#include <dt-bindings/zmk/pointing.h>


#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

//////////// Mod-Tap Home Row Mods Definiton //////////////////
&mt {
        compatible = "zmk,behavior-hold-tap";
        label = "HOLD_BEHAVIOUR";
        bindings = <&kp>, <&kp>;

        flavor = "tap-preferred";
        require-prior-idle-ms = <140>;
        tapping-term-ms = <200>;
        quick-tap-ms = <90>;
        retro-tap;

        #binding-cells = <2>;
       // hold-while-undecided; 
       // Don't enable hold while undecided. It will send the mod key first, even if it was a tap
       hold-trigger-on-release;

}; //////////// End of Mod-Tap Home Row Mods Definiton //////////////////


///////////////////////////// MAIN /////////////////////////////////////////
/ { 


//////////  CONDITIONAL LAYERS Definition ///////////////////////////////

conditional_layers {
        compatible = "zmk,conditional-layers";

//////////  1. Activate ADJUST layer by pressing raise and lower ///////
        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };


}; //////////  End of CONDITIONAL LAYERS Definition ///////////////////



///////////// Behaviours Definition //////////////////////////

behaviors {

//////// 1. Double Tap Raise Layer to Lock Layer ////////////

             toggle_raise_layer: toggle_raise_layer {
                compatible = "zmk,behavior-tap-dance";
                label = "TOGGLE_RAISE_LAYER";
                #binding-cells = <0>;
                bindings = <&mo 2>, <&tog 2>, <&to 0>;
              };

//////// 2. Rotary Encoder use Mouse Scrolling ////////////

        rot_msc: sensor_rotate_kp {
            compatible = "zmk,behavior-sensor-rotate-var";
            #sensor-binding-cells = <2>;
            bindings = <&msc>, <&msc>;
        };

}; //// End Behaviours ////////////////////////// 


/////////////////// KEYSCAN ///////////////////////////////////
// 1. Keyscan enabine wakeup source for deep-sleep 
// Ref: https://zmk.dev/docs/features/low-power-states#wakeup-sources
    kscan: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        diode-direction = "col2row";
        wakeup-source;

    };

/////////////////// END OF KEYSCAN ///////////////////////////////////

////////////////// KEYMAP /////////////////////////////////////
keymap {
        compatible = "zmk,keymap";


/////////// 0. DEFAULT ///////////////

        default_layer {
            display-name = "default";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp TAB           &kp N1                   &kp N2  &kp N3    &kp N4            &kp N5                                  &kp N6               &kp N7     &kp N8     &kp N9    &kp N0    &kp MINUS
&gresc           &kp Q                    &kp W   &kp E     &kp R             &kp T                                   &kp Y                &kp U      &kp I      &kp O     &kp P     &kp APOSTROPHE
&kp LEFT_SHIFT    &mt LCTRL A  &mt LEFT_SHIFT S   &mt LALT D     &mt LEFT_GUI  F             &kp G                                   &mt RIGHT_GUI  H                &mt RIGHT_SHIFT J      &mt RIGHT_CONTROL K      &mt RALT L     &kp SEMI  &kp BACKSPACE
&kp LEFT_CONTROL  &kp Z                    &kp X   &kp C     &kp V             &kp B         &kp C_MUTE    &mkp LCLK   &kp N                &kp M      &kp COMMA  &kp DOT   &kp FSLH  &kp RIGHT_SHIFT
                                           &mo 1   &kp LALT  &kp LALT  &kp LEFT_GUI  &kp SPACE     &kp RETURN  &toggle_raise_layer  &kp RCTRL  &kp RALT   &kp RGUI
            >;

            // sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_msc SCRL_UP_ENCODER SCRL_DOWN_ENCODER>;


        };  /////////// End of 0. DEFAULT ///////////////




/////////// 1. LOWER ///////////////

        lower_layer {
            display-name = "lower";

            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&trans  &kp F1     &kp F2     &kp F3    &kp F4    &kp F5                       &kp F6     &kp F7    &kp F8     &kp F9     &kp F10   &kp F11
&kp TILDE    &kp N1     &kp N2     &kp N3    &kp N4    &kp N5                       &kp N6     &kp N7    &kp N8     &kp N9     &kp N0    &kp F12
&trans     &kp EXCL   &kp AT     &kp HASH  &kp DLLR  &kp PRCNT                    &kp CARET  &kp AMPS  &kp ASTRK  &kp LPAR   &kp RPAR  &kp PIPE
&trans     &kp EQUAL  &kp MINUS  &kp PLUS  &kp LBRC  &kp RBRC   &trans    &trans  &kp LBKT   &kp RBKT  &kp SEMI   &kp COLON  &kp BSLH  &trans
                      &trans     &trans    &trans    &trans     &trans    &trans  &trans     &trans    &trans     &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_msc SCRL_LEFT_ENCODER SCRL_RIGHT_ENCODER>;
        }; /////////// End of 1. LOWER ///////////////





/////////// 2. RAISE ///////////////

        raise_layer {
            display-name = "raise";

            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |       | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
            // |       | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |       | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //                |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1      &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                              &kp PG_UP       &kp HOME        &trans        &trans           &trans  &trans
&gresc       &kp INS       &mmv MOVE_UP         &kp K_CMENU   &trans        &trans                          &kp PAGE_DOWN   &kp END         &trans        &trans           &trans  &kp PIPE
&trans      &mmv MOVE_LEFT      &mmv MOVE_DOWN  &mmv MOVE_RIGHT     &trans    &kp CLCK                        &kp LEFT        &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT        &trans  &kp DELETE
&trans   &kp EQUAL  &kp MINUS  &kp PLUS  &kp LBRC  &kp RBRC &trans                                            &trans  &kp LBKT          &kp RBKT  &kp SEMI   &kp COLON  &kp BSLH  &trans
&trans            &trans        &trans    &trans                               &mkp LCLK                       &mkp RCLK  &trans          &trans          &trans        &trans
            >;


            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_msc SCRL_UP_ENCODER SCRL_DOWN_ENCODER>;

        }; /////////// End of 2. RAISE ///////////////




/////////// 3. ADJUST ///////////////

        adjust_layer {
            // ----------------------------------------------------------------------------------------------------------------------------
            // | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
            // | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
            // |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
            // |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
            //                    |         |         |         |         |         | |      |      |      |       |      |

            display-name = "adjust";
            bindings = <
&bt BT_CLR         &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4                               &none  &none  &none  &none  &none  &none
&ext_power EP_TOG  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &rgb_ug RGB_EFF                            &none  &none  &none  &none  &none  &none
&none              &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &none            &none            &none                                      &none  &none  &none  &none  &none  &none
&none              &none            &none            &none            &none            &none            &rgb_ug RGB_TOG    &none  &none  &none  &none  &none  &none  &none
                                    &none            &none            &none            &none            &none              &none  &none  &none  &none  &none
            >;
        }; /////////// End of 3. ADJUST ///////////////




        extra1 { status = "reserved"; };

        extra2 { status = "reserved"; };


 }; ////////////////// End of KEYMAP /////////////////////////////////////

}; ///////////////////////////// End of MAIN /////////////////////////////////////////

